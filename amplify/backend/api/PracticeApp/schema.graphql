type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  image: String
  ChatRoomMessages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  users: [User] @manyToMany(relationName: "UserChatRoom")
  LastMessage: Message @hasOne
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  message: String!
  messageType: String!
  chatroomID: ID! @index(name: "byChatRoom", sortKeyFields: ["createdAt"], queryField: "listMessagesByChatRoom")
  userID: ID! @index(name: "byUser")
  messageToSearc: String!
}

type VFile {
  filename: String!
  path: String
  url: String
  width: String!
  height: String!
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  photoProfile: VFile
  status: String
  UserMessage: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  ChatRooms: [ChatRoom] @manyToMany(relationName: "UserChatRoom")
  nameToSearch: String!
}
 